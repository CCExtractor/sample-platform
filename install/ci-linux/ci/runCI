#!/bin/bash

# This script will run the test suite. It requires no parameters, but needs
# some files to be present on the system. These are:
# - file containing the URL to report to
# - git repository with the code to compile & run

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

if [ ! -f "$DIR/variables" ]; then
    # No variable file defined
    sudo shutdown -h now
fi

# Source variables
. "$DIR/variables"

# Check if required files & folders are present
if [ ! -f ${reportURLFile} ]; then
    # No report URL file defined
    sudo shutdown -h now
fi
if [ ! -d ${srcDir} ]; then
    # No source dir defined
    sudo shutdown -h now
fi

reportURL=$(cat ${reportURLFile})
userAgent="CCX/CI_BOT"
logFile="${reportFolder}/log.html"
# Functions to shorten the script

# Post status to the server
function postStatus {
    curl -s -A "${userAgent}" --data "type=progress&status=$1&message=$2" -w "\n" "${reportURL}" >> "${logFile}"
}
# Exit script and post abort status
function haltAndCatchFire {
	postStatus "canceled" $1 >> "${logFile}"
	curl -s -A "${userAgent}" --form "type=logupload" --form "file=@${logFile}" -w "\n" "${reportURL}" #field type field to send a file
	sudo shutdown -h now
}
# Fail when the exit status is not equal to 0
function executeCommand {
	#echo "$@"
	"$@" >> "${logFile}"
	local status=$?
	if [ ${status} -ne 0 ]; then
		haltAndCatchFire "" # No message needed as we post before anyway
	fi
}

postStatus "preparation" "Copy testsuite to local folder"
executeCommand cp -r ${suiteSrcDir}/* ${suiteDstDir}

postStatus "preparation" "Copy code to local folder"
executeCommand cp -r ${srcDir}/* ${dstDir}
executeCommand cd ${dstDir}

postStatus "building" "Compiling CCExtractor"
# Go to linux build folder
executeCommand cd linux
# Build CCExtractor using the bash build script
./build >> "${logFile}" 2>&1
# Check if build succeeded
if [ -x "ccextractor" ]; then
	chmod 700 ccextractor
	# Run testSuite
	postStatus "testing" "Running tests"
	executeCommand cd ${suiteDstDir}
	executeCommand ${tester} --entries "${testFile}" --executable "${dstDir}/linux/ccextractor" --tempfolder "${tempFolder}" --timeout 3000 --reportfolder "${reportFolder}" --resultfolder "${resultFolder}" --samplefolder "${sampleFolder}" --method Server --url "${reportURL}"
	postStatus "completed" "Ran all tests"
	# Shut down
	sudo shutdown -h now
else
	haltAndCatchFire "build"
fi