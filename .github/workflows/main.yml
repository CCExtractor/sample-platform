name: Run tests and code checks

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  TESTING: true

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libvirt-dev
        python -m pip install --upgrade pip
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Apply dogdy
      run: |
        dodgy
    - name: Apply isort
      run: |
        isort . --check-only
    - name: Apply pydocstyle
      run: |
        pydocstyle --config=./.pydocstylerc
    - name: Apply mypy
      run: |
        mypy --install-types
        mypy .
    - name: Apply pycodestyle
      run: |
        pycodestyle ./ --config=./.pycodestylerc
    - name: Test with nose
      run: |
        nosetests --nocapture --with-cov --cov-config .coveragerc
    - name: Upload to codecov
      uses: codecov/codecov-action@v1
      with:
        flags: unittests
        name: sample-platform
        fail_ci_if_error: true
