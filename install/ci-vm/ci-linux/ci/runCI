#!/bin/bash

# This script will run the test suite. It requires no parameters, but needs
# some files to be present on the system. These are:
# - file containing the URL to report to
# - git repository with the code to compile & run

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

if [ ! -f "$DIR/variables" ]; then
    # No variable file defined
    sudo shutdown -h now
fi

# Functions for re-use in various stages of the test progress

# Post status to the server
function postStatus {
    echo "Posting ${1} - ${2} to the server:" >> "${logFile}"
    curl -s -A "${userAgent}" --data "type=progress&status=$1&message=$2" -w "\n" "${reportURL}" >> "${logFile}"
}

# Send the log file to the server so it can be used
function sendLogFile {
    echo "Sending log to the server:" >> "${logFile}"
    curl -s -A "${userAgent}" --form "type=logupload" --form "file=@${logFile}" -w "\n" "${reportURL}"
    sleep 5
}

# Exit script and post abort status
function haltAndCatchFire {
        postStatus "canceled" $1 >> "${logFile}"
        sendLogFile
        sudo shutdown -h now
}

# Fail when the exit status is not equal to 0
function executeCommand {
        #echo "$@"
        "$@" >> "${logFile}"
        local status=$?
        if [ ${status} -ne 0 ]; then
                haltAndCatchFire "" # No message needed as we post before anyway
        fi
}

# Source variables
. "$DIR/variables"

# Add cargo to path
PATH="/root/.cargo/bin:$PATH"

reportURL=$(curl http://metadata/computeMetadata/v1/instance/attributes/reportURL -H "Metadata-Flavor: Google")
userAgent="CCX/CI_BOT"
logFile="${reportFolder}/log.html"

postStatus "preparation" "Loaded variables and created log file"

# Truncate log in case there was anything left from a previous session
echo "" > "${logFile}"

postStatus "building" "Checking if CCExtractor build artifact is present"
if [ -e "${dstDir}/ccextractor" ]; then
        chmod 700 "${dstDir}/ccextractor"
        chmod +x ${tester}
        postStatus "testing" "Running tests"
        executeCommand cd ${suiteDstDir}
        executeCommand ${tester} --entries "${testFile}" --executable "${dstDir}/ccextractor" --tempfolder "${tempFolder}" --timeout 3000 --reportfolder "${reportFolder}" --resultfolder "${resultFolder}" --samplefolder "${sampleFolder}" --method Server --url "${reportURL}"
        postStatus "completed" "Ran all tests"
        sendLogFile

        sudo shutdown -h now
else
        haltAndCatchFire "artifact"
fi